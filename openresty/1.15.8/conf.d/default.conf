server {
    listen       80;
    server_name  localhost;

    set $root                         $document_root;
    # ~/workspace/openresty/iresty-master;
    # ${prefix};
    # $document_root/..;

    set $template_root                $root/site/templates;
    set $site_dir                     $root/site/;
    set $template_cache               off;
    set $store_dir                    $root/site/download/; # 文件存储路径

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    location /ngx_status   {
        stub_status on;
        access_log off;
        #allow 127.0.0.1;
        #deny all;
    }

    location = /hello {
      content_by_lua_block {
        ngx.say("当前时间2:", ngx.now())
      }
    }

    location /demo {
        default_type text/html;
        content_by_lua '
            ngx.say("<p>hello, world</p>")
        ';
    }

    location = /test {
        content_by_lua_file html/site/test/test_example.lua;
    }

    location = /upfile {
        default_type text/html;
        content_by_lua_file html/site/test/test_upload.lua;
    }

    # 文件下载入口: http://xxx:8082/download
    location /download {
        autoindex on;
        autoindex_localtime on;
        root   html;
        index  download.html;
    }
    # 开启静态图片压缩功能
    # location ~* /front/static/(.*)!(\d+)x(\d+)$ {
    #     alias /usr/share/nginx/html/front/static/$1;
    #     image_filter resize $2 $3;
    #     image_filter_buffer 50M;
    # }

    location ~* /front/static/(.*)!(\d+)x(\d+)$ {
            set $image_root /usr/share/nginx/html/front/static;
            set $file "$image_root$uri";
            rewrite_by_lua '
                local index = string.find(ngx.var.uri, "([0-9]+)x([0-9]+)");
                local originalUri = string.sub(ngx.var.uri, 0, index-2);
                local area = string.sub(ngx.var.uri, index);
                index = string.find(area, "([.])");
                area = string.sub(area, 0, index-1);
                local image_sizes = {"140x140", "800x800", "90x90"};

                function table.contains(table, element)
                    for _, value in pairs(table) do
                        if value == element then
                            return true
                        end
                    end
                    return false
                end
                if table.contains(image_sizes, area) then
                    local command = "gm convert " .. ngx.var.image_root ..  originalUri  .. " -thumbnail " .. area .. " -gravity center -extent " .. area .. " " .. ngx.var.file;
                    os.execute(command);
                else
                    ngx.exit(401)
                end
            ';
            alias /usr/share/nginx/html/front/static;

        }


    # include             /etc/nginx/conf.d/locations;
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
